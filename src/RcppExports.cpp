// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// fast_dist
NumericMatrix fast_dist(NumericMatrix x, int power);
RcppExport SEXP cstab_fast_dist(SEXP xSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_dist(x, power));
    return rcpp_result_gen;
END_RCPP
}
// equal
std::vector<bool> equal(std::vector<int> x);
RcppExport SEXP cstab_equal(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(equal(x));
    return rcpp_result_gen;
END_RCPP
}
// rootChoose
double rootChoose(int n, int k, double root);
RcppExport SEXP cstab_rootChoose(SEXP nSEXP, SEXP kSEXP, SEXP rootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type root(rootSEXP);
    rcpp_result_gen = Rcpp::wrap(rootChoose(n, k, root));
    return rcpp_result_gen;
END_RCPP
}
// rootChooseLookup
double rootChooseLookup(int n, int k, std::vector<double> lookup);
RcppExport SEXP cstab_rootChooseLookup(SEXP nSEXP, SEXP kSEXP, SEXP lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type lookup(lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(rootChooseLookup(n, k, lookup));
    return rcpp_result_gen;
END_RCPP
}
// rootCombLookup
double rootCombLookup(std::vector<double> ns, std::vector<double> lookup);
RcppExport SEXP cstab_rootCombLookup(SEXP nsSEXP, SEXP lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type lookup(lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(rootCombLookup(ns, lookup));
    return rcpp_result_gen;
END_RCPP
}
// stabExp
double stabExp(std::vector<double> ns, std::vector<double> lookup);
RcppExport SEXP cstab_stabExp(SEXP nsSEXP, SEXP lookupSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type lookup(lookupSEXP);
    rcpp_result_gen = Rcpp::wrap(stabExp(ns, lookup));
    return rcpp_result_gen;
END_RCPP
}
// lookup
std::vector<double> lookup(int n, double root);
RcppExport SEXP cstab_lookup(SEXP nSEXP, SEXP rootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type root(rootSEXP);
    rcpp_result_gen = Rcpp::wrap(lookup(n, root));
    return rcpp_result_gen;
END_RCPP
}
// kmeans_predict
std::vector<int> kmeans_predict(GenericVector kmeans, NumericMatrix data);
RcppExport SEXP cstab_kmeans_predict(SEXP kmeansSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< GenericVector >::type kmeans(kmeansSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(kmeans_predict(kmeans, data));
    return rcpp_result_gen;
END_RCPP
}
